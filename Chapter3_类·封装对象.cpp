#include<iostream>
#include<string>
                                                    /*
-----Chapter3.类・封装对象-----
____________________________________________________
类是C++中最重要的内容，也是面向对象编程的基础。
类是对象的蓝图，对象是类的实例化。
――Car是一个类，BMW则是此类的一个对象。
――Person是一个类，小明则是此类的一个对象。

他们的表达方法是：
class Car{} and class Person{}
Car BMW; Person 小明;类的表达和结构体基本一致。
类有其属性和行为。
   比如，对于类Car来说，有以下属性：
   *车的品牌型号
   *车的价格
   *车的排量……等等
   类Car还有以下行为：
   *发动
   *刹车
   *加速……等等
   
类的属性是类的成员变量，类的行为(又称方法)是类的成员函数
》》下面，我们动手打造一台车！
――――――――――――――――――――――――――――――――――――――――――――――――――――
>>>>>Step1.建立一个车类：class Car{}<<<<<
要求包含以下属性（即成员变量）：
   *string 车的品牌和型号(例如BMW_X5)
   *int 车的价格（例如17，单位为万）
   *int 车的百公里油耗（一般在6――15之间，单位为L）
   *int 平均速率（单位是km/h）(默认值为0)
   *int 发动时刻（第几小时发车）（默认为0）
   *int 刹车时刻（第几小时停止）（默认为0）
――――――――――――――――――――――――――――――――――――――――――――――――――――
                                                    */
//代码全部就写在下方即可
class Car {
    //To start

};
                                                    /*  
____________________________________________________
>>>>>Step2.在你的类中添加行为<<<<<
要求包含以下成员函数：
   1.默认构造函数：
    *在此类中我们不使用无参构造，因此无需再自定此函数了。
   2.有参构造函数：
     功能：在有参数的情况下，按参数进行初始化
     参考：Car(string 型号,int 价格,int 百公里油耗)
   3.发动汽车：
     功能：提供发动时刻（第几小时发车）和平均速率
     参考：void Mobilize(int mobTime, int speed){}
   4.刹车：
     功能：提供停车时刻（第几小时停车）
     参考：void pullUp(int pullTime){}
   5.计算油耗：
     功能：通过发车时刻、停车时刻和百公里油耗来计算油耗。
     参考：double Fuel_consumption(){}
――――――――――――――――――――――――――――――――――――――――――――――――――――
                                                    */
//请继续在你上面写的类中添加这些成员函数！
                                                    /*
____________________________________________________
>>>>>Step3.实例化你的车<<<<<
请写一个主函数，实例化你的爱车。自定义品牌类型和价格。
打印你爱车的品牌、价格。
并检验，在满足如下条件时：
   *第3小时发车
   *第9小时停车
   *平均速率为80km/h
   *百公里油耗为7L
油耗为多少？
――――――――――――――――――――――――――――――――――――――――――――――――――――
                                                    */